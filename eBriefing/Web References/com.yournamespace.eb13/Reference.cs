//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.454
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.454.
// 
#pragma warning disable 1591

namespace eBriefing.com.metrostarsystems.eb13 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MultiNotes_1Soap", Namespace="eBriefing")]
	public partial class MultiNotes_1 : System.Web.Services.Protocols.SoapHttpClientBridge {
        
        private System.Threading.SendOrPostCallback SaveNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNotesUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllNotesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
		public MultiNotes_1(string url) {
			this.Url = url;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SaveNotesCompletedEventHandler SaveNotesCompleted;
        
        /// <remarks/>
        public event GetNotesUpdatesCompletedEventHandler GetNotesUpdatesCompleted;
        
        /// <remarks/>
        public event GetAllNotesCompletedEventHandler GetAllNotesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("eBriefing/SaveNotes", RequestNamespace="eBriefing", ResponseNamespace="eBriefing", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveNotes(Note[] notes) {
            object[] results = this.Invoke("SaveNotes", new object[] {
                        notes});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveNotesAsync(Note[] notes) {
            this.SaveNotesAsync(notes, null);
        }
        
        /// <remarks/>
        public void SaveNotesAsync(Note[] notes, object userState) {
            if ((this.SaveNotesOperationCompleted == null)) {
                this.SaveNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveNotesOperationCompleted);
            }
            this.InvokeAsync("SaveNotes", new object[] {
                        notes}, this.SaveNotesOperationCompleted, userState);
        }
        
        private void OnSaveNotesOperationCompleted(object arg) {
            if ((this.SaveNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveNotesCompleted(this, new SaveNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("eBriefing/GetNotesUpdates", RequestNamespace="eBriefing", ResponseNamespace="eBriefing", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Note[] GetNotesUpdates(string bookId, System.DateTime LastSyncDateTime) {
            object[] results = this.Invoke("GetNotesUpdates", new object[] {
                        bookId,
                        LastSyncDateTime});
            return ((Note[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNotesUpdatesAsync(string bookId, System.DateTime LastSyncDateTime) {
            this.GetNotesUpdatesAsync(bookId, LastSyncDateTime, null);
        }
        
        /// <remarks/>
        public void GetNotesUpdatesAsync(string bookId, System.DateTime LastSyncDateTime, object userState) {
            if ((this.GetNotesUpdatesOperationCompleted == null)) {
                this.GetNotesUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNotesUpdatesOperationCompleted);
            }
            this.InvokeAsync("GetNotesUpdates", new object[] {
                        bookId,
                        LastSyncDateTime}, this.GetNotesUpdatesOperationCompleted, userState);
        }
        
        private void OnGetNotesUpdatesOperationCompleted(object arg) {
            if ((this.GetNotesUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNotesUpdatesCompleted(this, new GetNotesUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("eBriefing/GetAllNotes", RequestNamespace="eBriefing", ResponseNamespace="eBriefing", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Note[] GetAllNotes(string bookId, string startOffset, int pageSize) {
            object[] results = this.Invoke("GetAllNotes", new object[] {
                        bookId,
                        startOffset,
                        pageSize});
            return ((Note[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllNotesAsync(string bookId, string startOffset, int pageSize) {
            this.GetAllNotesAsync(bookId, startOffset, pageSize, null);
        }
        
        /// <remarks/>
        public void GetAllNotesAsync(string bookId, string startOffset, int pageSize, object userState) {
            if ((this.GetAllNotesOperationCompleted == null)) {
                this.GetAllNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllNotesOperationCompleted);
            }
            this.InvokeAsync("GetAllNotes", new object[] {
                        bookId,
                        startOffset,
                        pageSize}, this.GetAllNotesOperationCompleted, userState);
        }
        
        private void OnGetAllNotesOperationCompleted(object arg) {
            if ((this.GetAllNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllNotesCompleted(this, new GetAllNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="eBriefing")]
    public partial class Note {
        
        private string noteIdField;
        
        private string bookIdField;
        
        private int bookVersionField;
        
        private string pageIdField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private string noteTextField;
        
        private bool isDeletedField;
        
        /// <remarks/>
        public string NoteId {
            get {
                return this.noteIdField;
            }
            set {
                this.noteIdField = value;
            }
        }
        
        /// <remarks/>
        public string BookId {
            get {
                return this.bookIdField;
            }
            set {
                this.bookIdField = value;
            }
        }
        
        /// <remarks/>
        public int BookVersion {
            get {
                return this.bookVersionField;
            }
            set {
                this.bookVersionField = value;
            }
        }
        
        /// <remarks/>
        public string PageId {
            get {
                return this.pageIdField;
            }
            set {
                this.pageIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public string NoteText {
            get {
                return this.noteTextField;
            }
            set {
                this.noteTextField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveNotesCompletedEventHandler(object sender, SaveNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNotesUpdatesCompletedEventHandler(object sender, GetNotesUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNotesUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNotesUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Note[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Note[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllNotesCompletedEventHandler(object sender, GetAllNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Note[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Note[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591